

/**
 * ROS message: ev3_msgs/Ev3PduActuatorHeader
 * Generated by hakoniwa-ros2pdu.
 */
export class Ev3PduActuatorHeader {
/** @type { string } */
    name;
/** @type { number } */
    version;
/** @type { bigint } */
    asset_time;
/** @type { number } */
    ext_off;
/** @type { number } */
    ext_size;


    constructor() {
        this.name = "";
        this.version = 0;
        this.asset_time = 0n;
        this.ext_off = 0;
        this.ext_size = 0;
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'name'
            const field_val = this.name;
            if (typeof field_val?.toDict === 'function') {
                d['name'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['name'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['name'] = field_val;
            }
        }
        {
            // handle field 'version'
            const field_val = this.version;
            if (typeof field_val?.toDict === 'function') {
                d['version'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['version'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['version'] = field_val;
            }
        }
        {
            // handle field 'asset_time'
            const field_val = this.asset_time;
            if (typeof field_val?.toDict === 'function') {
                d['asset_time'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['asset_time'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['asset_time'] = field_val;
            }
        }
        {
            // handle field 'ext_off'
            const field_val = this.ext_off;
            if (typeof field_val?.toDict === 'function') {
                d['ext_off'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['ext_off'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['ext_off'] = field_val;
            }
        }
        {
            // handle field 'ext_size'
            const field_val = this.ext_size;
            if (typeof field_val?.toDict === 'function') {
                d['ext_size'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['ext_size'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['ext_size'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { Ev3PduActuatorHeader }
     */
    static fromDict(d) {
        const obj = new Ev3PduActuatorHeader();
        if (d.hasOwnProperty('name')) {
            obj.name = d.name;
        }
        if (d.hasOwnProperty('version')) {
            obj.version = d.version;
        }
        if (d.hasOwnProperty('asset_time')) {
            obj.asset_time = d.asset_time;
        }
        if (d.hasOwnProperty('ext_off')) {
            obj.ext_off = d.ext_off;
        }
        if (d.hasOwnProperty('ext_size')) {
            obj.ext_size = d.ext_size;
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { Ev3PduActuatorHeader }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
