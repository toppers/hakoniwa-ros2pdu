

/**
 * ROS message: hako_srv_msgs/ServiceResponseHeader
 * Generated by hakoniwa-ros2pdu.
 */
export class ServiceResponseHeader {
/** @type { number } */
    request_id;
/** @type { string } */
    service_name;
/** @type { string } */
    client_name;
/** @type { number } */
    status;
/** @type { number } */
    processing_percentage;
/** @type { number } */
    result_code;


    constructor() {
        this.request_id = 0;
        this.service_name = "";
        this.client_name = "";
        this.status = 0;
        this.processing_percentage = 0;
        this.result_code = 0;
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'request_id'
            const field_val = this.request_id;
            if (typeof field_val?.toDict === 'function') {
                d['request_id'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['request_id'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['request_id'] = field_val;
            }
        }
        {
            // handle field 'service_name'
            const field_val = this.service_name;
            if (typeof field_val?.toDict === 'function') {
                d['service_name'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['service_name'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['service_name'] = field_val;
            }
        }
        {
            // handle field 'client_name'
            const field_val = this.client_name;
            if (typeof field_val?.toDict === 'function') {
                d['client_name'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['client_name'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['client_name'] = field_val;
            }
        }
        {
            // handle field 'status'
            const field_val = this.status;
            if (typeof field_val?.toDict === 'function') {
                d['status'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['status'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['status'] = field_val;
            }
        }
        {
            // handle field 'processing_percentage'
            const field_val = this.processing_percentage;
            if (typeof field_val?.toDict === 'function') {
                d['processing_percentage'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['processing_percentage'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['processing_percentage'] = field_val;
            }
        }
        {
            // handle field 'result_code'
            const field_val = this.result_code;
            if (typeof field_val?.toDict === 'function') {
                d['result_code'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['result_code'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['result_code'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { ServiceResponseHeader }
     */
    static fromDict(d) {
        const obj = new ServiceResponseHeader();
        if (d.hasOwnProperty('request_id')) {
            obj.request_id = d.request_id;
        }
        if (d.hasOwnProperty('service_name')) {
            obj.service_name = d.service_name;
        }
        if (d.hasOwnProperty('client_name')) {
            obj.client_name = d.client_name;
        }
        if (d.hasOwnProperty('status')) {
            obj.status = d.status;
        }
        if (d.hasOwnProperty('processing_percentage')) {
            obj.processing_percentage = d.processing_percentage;
        }
        if (d.hasOwnProperty('result_code')) {
            obj.result_code = d.result_code;
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { ServiceResponseHeader }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
