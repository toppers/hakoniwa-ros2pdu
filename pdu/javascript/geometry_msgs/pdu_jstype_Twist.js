import { Vector3 } from '../geometry_msgs/pdu_jstype_Vector3.js';


/**
 * ROS message: geometry_msgs/Twist
 * Generated by hakoniwa-ros2pdu.
 */
export class Twist {
/** @type { Vector3 } */
    linear;
/** @type { Vector3 } */
    angular;


    constructor() {
        this.linear = null;
        this.angular = null;
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'linear'
            const field_val = this.linear;
            if (typeof field_val?.toDict === 'function') {
                d['linear'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['linear'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['linear'] = field_val;
            }
        }
        {
            // handle field 'angular'
            const field_val = this.angular;
            if (typeof field_val?.toDict === 'function') {
                d['angular'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['angular'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['angular'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { Twist }
     */
    static fromDict(d) {
        const obj = new Twist();
        if (d.hasOwnProperty('linear')) {
            const field_class = Vector3;
            if (d.linear) {
                obj.linear = field_class.fromDict(d.linear);
            }
        }
        if (d.hasOwnProperty('angular')) {
            const field_class = Vector3;
            if (d.angular) {
                obj.angular = field_class.fromDict(d.angular);
            }
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { Twist }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
