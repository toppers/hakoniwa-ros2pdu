import { DroneGetStateResponse } from '../drone_srv_msgs/pdu_jstype_DroneGetStateResponse.js';
import { HakoBatteryStatus } from '../hako_msgs/pdu_jstype_HakoBatteryStatus.js';
import { Point } from '../geometry_msgs/pdu_jstype_Point.js';
import { Pose } from '../geometry_msgs/pdu_jstype_Pose.js';
import { Quaternion } from '../geometry_msgs/pdu_jstype_Quaternion.js';
import { ServiceResponseHeader } from '../hako_srv_msgs/pdu_jstype_ServiceResponseHeader.js';


/**
 * ROS message: drone_srv_msgs/DroneGetStateResponsePacket
 * Generated by hakoniwa-ros2pdu.
 */
export class DroneGetStateResponsePacket {
/** @type { ServiceResponseHeader } */
    header;
/** @type { DroneGetStateResponse } */
    body;


    constructor() {
        this.header = null;
        this.body = null;
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'header'
            const field_val = this.header;
            if (typeof field_val?.toDict === 'function') {
                d['header'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['header'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['header'] = field_val;
            }
        }
        {
            // handle field 'body'
            const field_val = this.body;
            if (typeof field_val?.toDict === 'function') {
                d['body'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['body'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['body'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { DroneGetStateResponsePacket }
     */
    static fromDict(d) {
        const obj = new DroneGetStateResponsePacket();
        if (d.hasOwnProperty('header')) {
            const field_class = ServiceResponseHeader;
            if (d.header) {
                obj.header = field_class.fromDict(d.header);
            }
        }
        if (d.hasOwnProperty('body')) {
            const field_class = DroneGetStateResponse;
            if (d.body) {
                obj.body = field_class.fromDict(d.body);
            }
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { DroneGetStateResponsePacket }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
