

/**
 * ROS message: drone_srv_msgs/MagnetGrabResponse
 * Generated by hakoniwa-ros2pdu.
 */
export class MagnetGrabResponse {
/** @type { boolean } */
    ok;
/** @type { boolean } */
    magnet_on;
/** @type { boolean } */
    contact_on;
/** @type { string } */
    message;


    constructor() {
        this.ok = false;
        this.magnet_on = false;
        this.contact_on = false;
        this.message = "";
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'ok'
            const field_val = this.ok;
            if (typeof field_val?.toDict === 'function') {
                d['ok'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['ok'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['ok'] = field_val;
            }
        }
        {
            // handle field 'magnet_on'
            const field_val = this.magnet_on;
            if (typeof field_val?.toDict === 'function') {
                d['magnet_on'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['magnet_on'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['magnet_on'] = field_val;
            }
        }
        {
            // handle field 'contact_on'
            const field_val = this.contact_on;
            if (typeof field_val?.toDict === 'function') {
                d['contact_on'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['contact_on'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['contact_on'] = field_val;
            }
        }
        {
            // handle field 'message'
            const field_val = this.message;
            if (typeof field_val?.toDict === 'function') {
                d['message'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['message'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['message'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { MagnetGrabResponse }
     */
    static fromDict(d) {
        const obj = new MagnetGrabResponse();
        if (d.hasOwnProperty('ok')) {
            obj.ok = d.ok;
        }
        if (d.hasOwnProperty('magnet_on')) {
            obj.magnet_on = d.magnet_on;
        }
        if (d.hasOwnProperty('contact_on')) {
            obj.contact_on = d.contact_on;
        }
        if (d.hasOwnProperty('message')) {
            obj.message = d.message;
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { MagnetGrabResponse }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
