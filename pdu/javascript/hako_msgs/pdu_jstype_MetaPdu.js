

/**
 * ROS message: hako_msgs/MetaPdu
 * Generated by hakoniwa-ros2pdu.
 */
export class MetaPdu {
/** @type { number } */
    total_len;
/** @type { number } */
    magicno;
/** @type { number } */
    version;
/** @type { number } */
    flags;
/** @type { number } */
    meta_request_type;
/** @type { bigint } */
    hako_time_us;
/** @type { bigint } */
    asset_time_us;
/** @type { bigint } */
    real_time_us;
/** @type { string } */
    robot_name;
/** @type { number } */
    channel_id;
/** @type { number } */
    body_len;


    constructor() {
        this.total_len = 0;
        this.magicno = 0;
        this.version = 0;
        this.flags = 0;
        this.meta_request_type = 0;
        this.hako_time_us = 0n;
        this.asset_time_us = 0n;
        this.real_time_us = 0n;
        this.robot_name = "";
        this.channel_id = 0;
        this.body_len = 0;
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'total_len'
            const field_val = this.total_len;
            if (typeof field_val?.toDict === 'function') {
                d['total_len'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['total_len'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['total_len'] = field_val;
            }
        }
        {
            // handle field 'magicno'
            const field_val = this.magicno;
            if (typeof field_val?.toDict === 'function') {
                d['magicno'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['magicno'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['magicno'] = field_val;
            }
        }
        {
            // handle field 'version'
            const field_val = this.version;
            if (typeof field_val?.toDict === 'function') {
                d['version'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['version'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['version'] = field_val;
            }
        }
        {
            // handle field 'flags'
            const field_val = this.flags;
            if (typeof field_val?.toDict === 'function') {
                d['flags'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['flags'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['flags'] = field_val;
            }
        }
        {
            // handle field 'meta_request_type'
            const field_val = this.meta_request_type;
            if (typeof field_val?.toDict === 'function') {
                d['meta_request_type'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['meta_request_type'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['meta_request_type'] = field_val;
            }
        }
        {
            // handle field 'hako_time_us'
            const field_val = this.hako_time_us;
            if (typeof field_val?.toDict === 'function') {
                d['hako_time_us'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['hako_time_us'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['hako_time_us'] = field_val;
            }
        }
        {
            // handle field 'asset_time_us'
            const field_val = this.asset_time_us;
            if (typeof field_val?.toDict === 'function') {
                d['asset_time_us'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['asset_time_us'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['asset_time_us'] = field_val;
            }
        }
        {
            // handle field 'real_time_us'
            const field_val = this.real_time_us;
            if (typeof field_val?.toDict === 'function') {
                d['real_time_us'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['real_time_us'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['real_time_us'] = field_val;
            }
        }
        {
            // handle field 'robot_name'
            const field_val = this.robot_name;
            if (typeof field_val?.toDict === 'function') {
                d['robot_name'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['robot_name'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['robot_name'] = field_val;
            }
        }
        {
            // handle field 'channel_id'
            const field_val = this.channel_id;
            if (typeof field_val?.toDict === 'function') {
                d['channel_id'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['channel_id'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['channel_id'] = field_val;
            }
        }
        {
            // handle field 'body_len'
            const field_val = this.body_len;
            if (typeof field_val?.toDict === 'function') {
                d['body_len'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['body_len'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['body_len'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { MetaPdu }
     */
    static fromDict(d) {
        const obj = new MetaPdu();
        if (d.hasOwnProperty('total_len')) {
            obj.total_len = d.total_len;
        }
        if (d.hasOwnProperty('magicno')) {
            obj.magicno = d.magicno;
        }
        if (d.hasOwnProperty('version')) {
            obj.version = d.version;
        }
        if (d.hasOwnProperty('flags')) {
            obj.flags = d.flags;
        }
        if (d.hasOwnProperty('meta_request_type')) {
            obj.meta_request_type = d.meta_request_type;
        }
        if (d.hasOwnProperty('hako_time_us')) {
            obj.hako_time_us = d.hako_time_us;
        }
        if (d.hasOwnProperty('asset_time_us')) {
            obj.asset_time_us = d.asset_time_us;
        }
        if (d.hasOwnProperty('real_time_us')) {
            obj.real_time_us = d.real_time_us;
        }
        if (d.hasOwnProperty('robot_name')) {
            obj.robot_name = d.robot_name;
        }
        if (d.hasOwnProperty('channel_id')) {
            obj.channel_id = d.channel_id;
        }
        if (d.hasOwnProperty('body_len')) {
            obj.body_len = d.body_len;
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { MetaPdu }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
