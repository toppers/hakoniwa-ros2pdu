

/**
 * ROS message: hako_msgs/ShareObjectOwnerRequest
 * Generated by hakoniwa-ros2pdu.
 */
export class ShareObjectOwnerRequest {
/** @type { string } */
    object_name;
/** @type { number } */
    request_type;
/** @type { number } */
    new_owner_id;
/** @type { bigint } */
    request_time;


    constructor() {
        this.object_name = "";
        this.request_type = 0;
        this.new_owner_id = 0;
        this.request_time = 0n;
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'object_name'
            const field_val = this.object_name;
            if (typeof field_val?.toDict === 'function') {
                d['object_name'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['object_name'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['object_name'] = field_val;
            }
        }
        {
            // handle field 'request_type'
            const field_val = this.request_type;
            if (typeof field_val?.toDict === 'function') {
                d['request_type'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['request_type'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['request_type'] = field_val;
            }
        }
        {
            // handle field 'new_owner_id'
            const field_val = this.new_owner_id;
            if (typeof field_val?.toDict === 'function') {
                d['new_owner_id'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['new_owner_id'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['new_owner_id'] = field_val;
            }
        }
        {
            // handle field 'request_time'
            const field_val = this.request_time;
            if (typeof field_val?.toDict === 'function') {
                d['request_time'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['request_time'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['request_time'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { ShareObjectOwnerRequest }
     */
    static fromDict(d) {
        const obj = new ShareObjectOwnerRequest();
        if (d.hasOwnProperty('object_name')) {
            obj.object_name = d.object_name;
        }
        if (d.hasOwnProperty('request_type')) {
            obj.request_type = d.request_type;
        }
        if (d.hasOwnProperty('new_owner_id')) {
            obj.new_owner_id = d.new_owner_id;
        }
        if (d.hasOwnProperty('request_time')) {
            obj.request_time = d.request_time;
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { ShareObjectOwnerRequest }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
