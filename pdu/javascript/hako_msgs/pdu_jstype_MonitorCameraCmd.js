import { HakoCmdHeader } from '../hako_msgs/pdu_jstype_HakoCmdHeader.js';


/**
 * ROS message: hako_msgs/MonitorCameraCmd
 * Generated by hakoniwa-ros2pdu.
 */
export class MonitorCameraCmd {
/** @type { HakoCmdHeader } */
    header;
/** @type { number } */
    request_id;
/** @type { number } */
    encode_type;
/** @type { number } */
    request_type;


    constructor() {
        this.header = new HakoCmdHeader();
        this.request_id = 0;
        this.encode_type = 0;
        this.request_type = 0;
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'header'
            const field_val = this.header;
            if (typeof field_val?.toDict === 'function') {
                d['header'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['header'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['header'] = field_val;
            }
        }
        {
            // handle field 'request_id'
            const field_val = this.request_id;
            if (typeof field_val?.toDict === 'function') {
                d['request_id'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['request_id'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['request_id'] = field_val;
            }
        }
        {
            // handle field 'encode_type'
            const field_val = this.encode_type;
            if (typeof field_val?.toDict === 'function') {
                d['encode_type'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['encode_type'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['encode_type'] = field_val;
            }
        }
        {
            // handle field 'request_type'
            const field_val = this.request_type;
            if (typeof field_val?.toDict === 'function') {
                d['request_type'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['request_type'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['request_type'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { MonitorCameraCmd }
     */
    static fromDict(d) {
        const obj = new MonitorCameraCmd();
        if (d.hasOwnProperty('header')) {
            const field_class = HakoCmdHeader;
            if (d.header) {
                obj.header = field_class.fromDict(d.header);
            }
        }
        if (d.hasOwnProperty('request_id')) {
            obj.request_id = d.request_id;
        }
        if (d.hasOwnProperty('encode_type')) {
            obj.encode_type = d.encode_type;
        }
        if (d.hasOwnProperty('request_type')) {
            obj.request_type = d.request_type;
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { MonitorCameraCmd }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
