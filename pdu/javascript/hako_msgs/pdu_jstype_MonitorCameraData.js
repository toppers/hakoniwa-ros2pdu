import { CompressedImage } from '../sensor_msgs/pdu_jstype_CompressedImage.js';
import { Header } from '../std_msgs/pdu_jstype_Header.js';
import { Time } from '../builtin_interfaces/pdu_jstype_Time.js';


/**
 * ROS message: hako_msgs/MonitorCameraData
 * Generated by hakoniwa-ros2pdu.
 */
export class MonitorCameraData {
/** @type { number } */
    request_id;
/** @type { number } */
    image_data_length;
/** @type { CompressedImage } */
    image;


    constructor() {
        this.request_id = 0;
        this.image_data_length = 0;
        this.image = new CompressedImage();
    }

    /**
     * @returns {object}
     */
    toDict() {
        const d = {};
        {
            // handle field 'request_id'
            const field_val = this.request_id;
            if (typeof field_val?.toDict === 'function') {
                d['request_id'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['request_id'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['request_id'] = field_val;
            }
        }
        {
            // handle field 'image_data_length'
            const field_val = this.image_data_length;
            if (typeof field_val?.toDict === 'function') {
                d['image_data_length'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['image_data_length'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['image_data_length'] = field_val;
            }
        }
        {
            // handle field 'image'
            const field_val = this.image;
            if (typeof field_val?.toDict === 'function') {
                d['image'] = field_val.toDict();
            } else if (Array.isArray(field_val)) {
                d['image'] = field_val.map(item => typeof item?.toDict === 'function' ? item.toDict() : item);
            } else {
                d['image'] = field_val;
            }
        }
        return d;
    }

    /**
     * @param {object} d
     * @returns { MonitorCameraData }
     */
    static fromDict(d) {
        const obj = new MonitorCameraData();
        if (d.hasOwnProperty('request_id')) {
            obj.request_id = d.request_id;
        }
        if (d.hasOwnProperty('image_data_length')) {
            obj.image_data_length = d.image_data_length;
        }
        if (d.hasOwnProperty('image')) {
            const field_class = CompressedImage;
            if (d.image) {
                obj.image = field_class.fromDict(d.image);
            }
        }
        return obj;
    }

    /**
     * @returns {string}
     */
    toJSON(indent = 2) {
        return JSON.stringify(this.toDict(), null, indent);
    }

    /**
     * @param {string} json_str
     * @returns { MonitorCameraData }
     */
    static fromJSON(json_str) {
        return this.fromDict(JSON.parse(json_str));
    }
}
